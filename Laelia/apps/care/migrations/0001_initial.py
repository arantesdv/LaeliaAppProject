# Generated by Django 3.0.6 on 2020-10-22 16:19

import Laelia.apps.base.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0042_relation_enterprise'),
        ('meds', '0023_auto_20201017_2358'),
    ]

    operations = [
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('en_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='English Name')),
                ('pt_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Portuguese Name')),
                ('es_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Spanish Name')),
                ('_search_names', models.CharField(blank=True, editable=False, max_length=255, null=True)),
            ],
            options={
                'ordering': ['pt_name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TreatmentAttendanceBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('start', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('visits', models.IntegerField(blank=True, help_text='Leave blank for auto completion', null=True, verbose_name='Visits Completed')),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('relation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Relation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VisitAttendanceBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('date', models.DateField()),
                ('hour', models.IntegerField(choices=[(0, '0 h'), (1, '1 h'), (2, '2 h'), (3, '3 h'), (4, '4 h'), (5, '5 h'), (6, '6 h'), (7, '7 h'), (8, '8 h'), (9, '9 h'), (10, '10 h'), (11, '11 h'), (12, '12 h'), (13, '13 h'), (14, '14 h'), (15, '15 h'), (16, '16 h'), (17, '17 h'), (18, '18 h'), (19, '19 h'), (20, '20 h'), (21, '21 h'), (22, '22 h'), (23, '23 h')], default=8)),
                ('min', models.IntegerField(choices=[(0, '0 min'), (15, '15 min'), (30, '30 min'), (45, '45 min')], default=0)),
                ('duration', models.IntegerField(choices=[(15, '15 h'), (30, '30 h'), (45, '45 h'), (60, '60 h'), (75, '75 h'), (90, '90 h'), (105, '105 h'), (120, '120 h')], default=60)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('visit_reason', models.CharField(blank=True, choices=[('first visit', 'first visit'), ('follow up visit', 'follow up visit'), ('emergency visit', 'emergency visit'), ('therapy session', 'therapy session'), ('diagnostic procedure', 'diagnostic procedure'), ('treatment procedure', 'treatment procedure')], max_length=50, null=True)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Patient')),
                ('professional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Professional')),
                ('relation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Relation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TreatmentAttendanceCertificate',
            fields=[
                ('treatmentattendancebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='care.TreatmentAttendanceBase')),
                ('date', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('care.treatmentattendancebase',),
        ),
        migrations.CreateModel(
            name='VisitAttendanceCertificate',
            fields=[
                ('visitattendancebase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='care.VisitAttendanceBase')),
            ],
            options={
                'abstract': False,
            },
            bases=('care.visitattendancebase',),
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date and Time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modification Date and Time')),
                ('_is_ongoing', models.BooleanField(default=True, editable=False)),
                ('_is_protected', models.BooleanField(default=False, editable=False)),
                ('date', models.DateField(blank=True, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('from_time', models.TimeField(blank=True, null=True)),
                ('to_time', models.TimeField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('subjective', models.TextField(blank=True, null=True, verbose_name='Subjective')),
                ('objective', models.TextField(blank=True, null=True, verbose_name='Objective')),
                ('assessment', models.TextField(blank=True, null=True, verbose_name='Assessment')),
                ('plan', models.TextField(blank=True, null=True, verbose_name='Plan')),
                ('relation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Relation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date and Time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modification Date and Time')),
                ('_is_ongoing', models.BooleanField(default=True, editable=False)),
                ('_is_protected', models.BooleanField(default=False, editable=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('dose', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('dosage_regimen', models.IntegerField(blank=True, choices=[(1, '1x'), (2, '2x'), (3, '3x'), (4, '4x'), (5, '5x'), (6, '6x'), (7, '7x'), (8, '8x'), (9, '9x'), (10, '10x'), (11, '11x'), (12, '12x')], default=1, null=True)),
                ('frequency', models.IntegerField(choices=[(1, 'daily'), (7, 'weekly'), (14, 'biweekly'), (30, 'month')], default=1)),
                ('duration', models.IntegerField(blank=True, help_text='Days treatment duration. Keep blank for continuous', null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('boxes', models.IntegerField(blank=True, choices=[(1, '1 cx'), (2, '2 cx'), (3, '3 cx'), (4, '4 cx'), (5, '5 cx'), (6, '6 cx'), (7, '7 cx'), (8, '8 cx'), (9, '9 cx'), (10, '10 cx'), (11, '11 cx'), (12, '12 cx'), (13, '13 cx'), (14, '14 cx'), (15, '15 cx'), (16, '16 cx'), (17, '17 cx'), (18, '18 cx'), (19, '19 cx'), (20, '20 cx')], null=True)),
                ('comercial_drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meds.ComercialDrug')),
                ('relation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Relation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date and Time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modification Date and Time')),
                ('_is_ongoing', models.BooleanField(default=True, editable=False)),
                ('_is_protected', models.BooleanField(default=False, editable=False)),
                ('from_time', models.TimeField(blank=True, null=True)),
                ('to_time', models.TimeField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('timeline_age', Laelia.apps.base.fields.MinMaxFloatField(blank=True, null=True)),
                ('timeline_date', models.DateField(blank=True, null=True)),
                ('event_type', models.CharField(blank=True, choices=[('abuse', 'abuse'), ('trauma', 'trauma'), ('reward', 'reward'), ('stressor', 'stressor'), ('achievement', 'achievement'), ('loss', 'loss')], max_length=50, null=True)),
                ('experience_intensity', models.IntegerField(blank=True, choices=[(1, 'mild'), (2, 'moderate'), (3, 'intense')], null=True)),
                ('subjective_experience', models.IntegerField(blank=True, choices=[(1, 'positive'), (0, 'neutral'), (-1, 'negative')], null=True)),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('date', models.DateField(blank=True, null=True)),
                ('concepts', models.ManyToManyField(blank=True, to='care.Concept')),
                ('relation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Relation')),
            ],
            options={
                'ordering': ['timeline_age', 'created'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date and Time')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modification Date and Time')),
                ('_is_ongoing', models.BooleanField(default=True, editable=False)),
                ('_is_protected', models.BooleanField(default=False, editable=False)),
                ('date', models.DateField(blank=True, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('from_time', models.TimeField(blank=True, null=True)),
                ('to_time', models.TimeField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('document_type', models.CharField(blank=True, choices=[('visit attendance', 'visit attendance'), ('treatment attendance', 'treatment attendance'), ('leave', 'leave'), ('capability', 'capability'), ('disability', 'disability'), ('report', 'report'), ('referral', 'referral'), ('return', 'return')], max_length=50, null=True)),
                ('document_note', models.TextField(blank=True, null=True)),
                ('days', models.IntegerField(blank=True, null=True)),
                ('concepts', models.ManyToManyField(blank=True, to='care.Concept')),
                ('relation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Relation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='concept',
            constraint=models.UniqueConstraint(fields=('pt_name',), name='unique_concept'),
        ),
    ]
